<resources>
    <string name="app_name">MeLiChallenge</string>
    <string name="action_about">About</string>
    <string name="menu_search">Search</string>
    <string name="main_search_hint">Search on Mercado Libre</string>
    <string name="discount_fmt">%1$d\%% OFF</string>
    <string name="reviewTotal_fmt">(%1$d)</string>
    <string name="item">Item</string>
    <string name="payment_text">Pay in up to 12 installments</string>
    <string name="payment_learn_more">&lt;a href="https://www.mercadopago.com.ar/ayuda/medios-de-pago-cuotas-promociones_264">Learn more&lt;/a></string>
    <string name="location">Location</string>
    <string name="location_fmt">%1$s, %2$s, %3$s</string>
    <string name="warranty">Warranty</string>
    <string name="warranty_mercadoPagoTitle">Proteted purchase with Mercado Pago</string>
    <string name="warranty_mercadoPagoDescription">Receive the product you\'re expecting or we give you a refund.</string>
    <string name="warranty_customTitle">Seller warranty</string>
    <string name="attributes">Attributes</string>
    <string name="description">Description</string>
    <string name="search_welcomeText">Welcome to MeLiChallenge, try searching something to start.</string>
    <string name="search_emtpyStateText">Ups, there\'s no results for what you serached, try searching something else</string>
    <string name="aboutTitle">MeLiChallenge by Juan Martin Leiva</string>
    <string name="aboutBody">This is a demo app created by Juan Martin Leiva as a test for Mercado Libre (a.k.a. MeLi)\n\nThe app allows the user to perform a search in Mercado Libre, then you can see it\'s details.\n
	\n Inside the details, you can see all the item pictures, and perform a zoom in them.
        \n It also saves in disk your last searchs (the app comes with a simple preloaded data set), and shows as hint when typing in the search view.
        \n\n The following Android componentes were used: \n   * Lifecycle  \n   * Room to persist data
        \n\nThe following 3ยบ party libraries were used:
        \n   * Glide to handle picture loading and caching
        \n   * Retrofit for the rest client
        \n   * Gson to parse Json
        \n   * okhttp3 to process http request (using Retrofit)
        \n   * Butterknife for view binding
        \n   * PagedRecyclerView (a work of my own) to display the paged lists
        \n   * Dagger2 for dependency injection
        \n   * BigImageViewer to perform pan and zoom in pictures
    </string>
</resources>
